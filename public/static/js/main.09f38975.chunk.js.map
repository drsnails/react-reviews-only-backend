{"version":3,"sources":["store/car.reducer.js","services/async-storage.service.js","services/http.service.js","services/socket.service.js","services/user.service.js","store/user.reducer.js","store/review.reducer.js","store/system.reducer.js","store/store.js","assets/img/logo.png","pages/home-page.jsx","pages/about-us.jsx","services/util.service.js","services/car.service.js","services/event-bus.service.js","store/car.actions.js","pages/car-app.jsx","services/review.service.js","store/user.actions.js","pages/review-app.jsx","store/review.actions.js","pages/chat-app.jsx","pages/admin-app.jsx","routes.js","cmps/login-signup.jsx","cmps/app-header.jsx","cmps/user-msg.jsx","cmps/app-footer.jsx","pages/user-details.jsx","root-cmp.jsx","index.js"],"names":["initialState","cars","cart","lastRemovedCar","storageService","query","get","entityType","entityId","then","entities","find","entity","_id","post","newEntity","_makeId","push","_save","put","updatedEntity","idx","findIndex","splice","remove","postMany","newEntities","map","delay","JSON","parse","localStorage","getItem","Promise","resolve","reject","setTimeout","setItem","stringify","length","text","possible","i","charAt","Math","floor","random","Axios","create","withCredentials","SOCKET_EVENT_USER_UPDATED","SOCKET_EVENT_REVIEW_ADDED","socketService","socket","setup","io","on","eventName","cb","off","removeAllListeners","emit","data","terminate","createSocketService","window","review","console","log","STORAGE_KEY_LOGGEDIN_USER","gWatchedUser","userService","login","logout","signup","getLoggedinUser","getUsers","getById","userId","update","changeScore","a","user","_saveLocalUser","userCred","users","username","score","sessionStorage","removeItem","by","Error","addEventListener","freshUsers","watchedUser","u","count","reviews","isLoading","rootReducer","combineReducers","carModule","state","action","newState","type","car","carId","filter","carState","userModule","diff","systemModule","reviewModule","reviewId","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","_HomePage","changeCount","props","dispatch","this","src","logo","alt","style","maxWidth","onClick","React","Component","HomePage","connect","FancyBox","className","float","onClose","children","Contacts","height","backgroundColor","Projects","useState","projs","setProjs","projList","proj","ev","stopPropagation","p","transitionName","transitionEnterTimeout","transitionLeaveTimeout","Date","now","SplitPane","width","setWidth","display","left","flex","right","AboutUs","onTellMeMore","clearInterval","interval","toLocaleString","MyErrorBoundary","error","errorInfo","setState","whiteSpace","toString","componentStack","utilService","makeId","txt","makeLorem","size","words","getRandomIntInclusive","min","max","ceil","ms","STORAGE_KEY","listeners","carService","save","owner","getEmptyCar","vendor","price","subscribe","listener","cs","forEach","_notifySubscribersCarsChanged","eventBusService","callListener","detail","removeEventListener","dispatchEvent","CustomEvent","showUserMsg","showSuccessMsg","showErrorMsg","addToCart","myBus","_CarApp","onRemoveCar","onAddCar","onEditCar","prompt","carToSave","loadCars","fullname","mapDispatchToProps","catch","err","getState","savedCar","CarApp","reviewService","add","filterBy","name","byUser","aboutUserId","aboutUser","addedReview","freshReviews","loadUsers","removeUser","_ReviewApp","reviewToEdit","handleChange","target","value","prevState","addReview","preventDefault","alert","onRemove","removeReview","canRemove","loggedInUser","isAdmin","loadReviews","to","onSubmit","onChange","ReviewApp","_ChatApp","msg","msgs","topic","isBotMode","addMsg","newMsg","sendBotResponse","timeout","clearTimeout","from","changeTopic","sendMsg","msgHandleChange","checked","autoComplete","ChatApp","_AdminApp","routes","path","component","label","LoginSignup","credentials","password","isSignup","clearState","clearTemplate","field","onLogin","onSignup","toggleSignup","placeholder","required","_AppHeader","onLogout","route","exact","AppHeader","UserMsg","removeEvent","msgClass","_AppFooter","isCartShown","removeFromCart","checkout","reduce","acc","cartTotal","total","AppFooter","_UserDetails","loadAndWatchUser","match","params","id","UserDetails","RootCmp","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.09f38975.chunk.js","sourcesContent":["const initialState = {\r\n    cars: [],\r\n    cart:[],\r\n    lastRemovedCar: null\r\n}\r\nexport function carReducer(state = initialState, action) {\r\n    var newState = state\r\n    var cars\r\n    var cart\r\n    switch (action.type) {\r\n        case 'SET_CARS':\r\n            newState = { ...state, cars: action.cars }\r\n            break\r\n        case 'REMOVE_CAR':\r\n            const lastRemovedCar = state.cars.find(car => car._id === action.carId)\r\n            cars = state.cars.filter(car => car._id !== action.carId)\r\n            newState = { ...state, cars, lastRemovedCar}\r\n            break\r\n        case 'ADD_CAR':\r\n            newState = { ...state, cars:[...state.cars, action.car]}\r\n            break\r\n        case 'UPDATE_CAR':\r\n            cars = state.cars.map(car => (car._id === action.car._id)? action.car : car)\r\n            newState = { ...state, cars}\r\n            break\r\n        case 'ADD_TO_CART':\r\n            newState = { ...state, cart:[...state.cart, action.car]}\r\n            break\r\n        case 'REMOVE_FROM_CART':\r\n            cart = state.cart.filter(car => car._id !== action.carId)\r\n            newState = { ...state, cart}\r\n            break\r\n        case 'CLEAR_CART':\r\n            newState = { ...state, cart: []}\r\n            break\r\n        case 'UNDO_REMOVE_CAR':\r\n            if (state.lastRemovedCar) {\r\n                newState = { ...state, cars: [...state.cars, state.lastRemovedCar], lastRemovedCar: null}\r\n            }\r\n            break\r\n        default:\r\n    }\r\n    // For debug:\r\n    window.carState = newState\r\n    console.log('Prev State:', state)\r\n    console.log('Action:', action)\r\n    console.log('New State:', newState)\r\n    return newState\r\n\r\n}\r\n","\r\nexport const storageService = {\r\n    query,\r\n    get,\r\n    post,\r\n    put,\r\n    remove,\r\n    postMany\r\n}\r\n\r\nfunction query(entityType, delay = 1200) {\r\n    var entities = JSON.parse(localStorage.getItem(entityType)) || []\r\n\r\n    return new Promise((resolve, reject)=>{\r\n        setTimeout(()=>{\r\n            // reject('OOOOPs')\r\n            resolve(entities)\r\n        }, delay)   \r\n    })\r\n    // return Promise.resolve(entities)\r\n}\r\n\r\n\r\nfunction get(entityType, entityId) {\r\n    return query(entityType)\r\n        .then(entities => entities.find(entity => entity._id === entityId))\r\n}\r\nfunction post(entityType, newEntity) {\r\n    newEntity._id = _makeId()\r\n    return query(entityType)\r\n        .then(entities => {\r\n            entities.push(newEntity)\r\n            _save(entityType, entities)\r\n            return newEntity\r\n        })\r\n}\r\n\r\nfunction put(entityType, updatedEntity) {\r\n    return query(entityType)\r\n        .then(entities => {\r\n            const idx = entities.findIndex(entity => entity._id === updatedEntity._id)\r\n            entities.splice(idx, 1, updatedEntity)\r\n            _save(entityType, entities)\r\n            return updatedEntity\r\n        })\r\n}\r\n\r\nfunction remove(entityType, entityId) {\r\n    return query(entityType)\r\n        .then(entities => {\r\n            const idx = entities.findIndex(entity => entity._id === entityId)\r\n            entities.splice(idx, 1)\r\n            _save(entityType, entities)\r\n        })\r\n}\r\n\r\n\r\nfunction _save(entityType, entities) {\r\n    localStorage.setItem(entityType, JSON.stringify(entities))\r\n}\r\n\r\nfunction _makeId(length = 5) {\r\n    var text = ''\r\n    var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\r\n    for (var i = 0; i < length; i++) {\r\n        text += possible.charAt(Math.floor(Math.random() * possible.length))\r\n    }\r\n    return text\r\n}\r\n\r\nfunction postMany(entityType, newEntities) {\r\n    return query(entityType)\r\n        .then(entities => {\r\n            newEntities = newEntities.map(entity => ({...entity, _id: _makeId()}))\r\n            entities.push(...newEntities)\r\n            _save(entityType, entities)\r\n            return entities\r\n        })\r\n}","import Axios from 'axios'\r\n\r\nconst BASE_URL = process.env.NODE_ENV === 'production'\r\n    ? '/api/'\r\n    : '//localhost:3030/api/'\r\n\r\n\r\nvar axios = Axios.create({\r\n    withCredentials: true\r\n})\r\n\r\nexport const httpService = {\r\n    get(endpoint, data) {\r\n        return ajax(endpoint, 'GET', data)\r\n    },\r\n    post(endpoint, data) {\r\n        return ajax(endpoint, 'POST', data)\r\n    },\r\n    put(endpoint, data) {\r\n        return ajax(endpoint, 'PUT', data)\r\n    },\r\n    delete(endpoint, data) {\r\n        return ajax(endpoint, 'DELETE', data)\r\n    }\r\n}\r\n\r\nasync function ajax(endpoint, method = 'GET', data = null) {\r\n    try {\r\n        const res = await axios({\r\n            url: `${BASE_URL}${endpoint}`,\r\n            method,\r\n            data,\r\n            params: (method === 'GET') ? data : null\r\n        })\r\n        return res.data\r\n    } catch (err) {\r\n        console.log(`Had Issues ${method}ing to the backend, endpoint: ${endpoint}, with data: ${data}`)\r\n        console.dir(err)\r\n        if (err.response && err.response.status === 401) {\r\n            sessionStorage.clear();\r\n            window.location.assign('/')\r\n        }\r\n        throw err\r\n    }\r\n}","import io from 'socket.io-client'\r\n\r\nexport const SOCKET_EMIT_USER_WATCH = 'user-watch';\r\nexport const SOCKET_EVENT_USER_UPDATED = 'user-updated';\r\nexport const SOCKET_EVENT_REVIEW_ADDED = 'review-added';\r\nexport const SOCKET_EVENT_REVIEW_ABOUT_YOU = 'review-about-you';\r\n\r\n\r\nconst baseUrl = (process.env.NODE_ENV === 'production')? '' : '//localhost:3030'\r\nexport const socketService = createSocketService()\r\n// export const socketService = createDummySocketService()\r\n\r\nwindow.socketService = socketService\r\n\r\n// var socketIsReady = false;\r\nsocketService.setup()\r\n\r\n\r\nfunction createSocketService() {\r\n  var socket = null;\r\n  const socketService = {\r\n    setup() {\r\n      socket = io(baseUrl)\r\n    },\r\n    on(eventName, cb) {\r\n      socket.on(eventName, cb)\r\n    },\r\n    off(eventName, cb=null) {\r\n      if (!socket) return;\r\n      if (!cb) socket.removeAllListeners(eventName)\r\n      else socket.off(eventName, cb)\r\n    },\r\n    emit(eventName, data) {\r\n      socket.emit(eventName, data)\r\n    },\r\n    terminate() {\r\n      socket = null\r\n    }\r\n  }\r\n  return socketService\r\n}\r\n\r\n// eslint-disable-next-line\r\nfunction createDummySocketService() {\r\n  var listenersMap = {}\r\n  const socketService = {\r\n    listenersMap,\r\n    setup() {\r\n      listenersMap = {}\r\n    },\r\n    terminate() {\r\n      this.setup()\r\n    },\r\n    on(eventName, cb) {\r\n      listenersMap[eventName] = [...(listenersMap[eventName]) || [], cb]\r\n    },\r\n    off(eventName, cb) {\r\n      if (!listenersMap[eventName]) return\r\n      if (!cb) delete listenersMap[eventName]\r\n      else listenersMap[eventName] = listenersMap[eventName].filter(l => l !== cb)\r\n    },\r\n    emit(eventName, data) {\r\n      if (!listenersMap[eventName]) return\r\n      listenersMap[eventName].forEach(listener => {\r\n        listener(data)\r\n      })\r\n    },\r\n    debugMsg() {\r\n      this.emit('chat addMsg', {from: 'Someone', txt: 'Aha it worked!'})\r\n    },\r\n  }\r\n  window.listenersMap = listenersMap;\r\n  return socketService\r\n}\r\n\r\n\r\n// Basic Tests\r\n// function cb(x) {console.log('Socket Test - Expected Puk, Actual:', x)}\r\n// socketService.on('baba', cb)\r\n// socketService.on('baba', cb)\r\n// socketService.on('baba', cb)\r\n// socketService.on('mama', cb)\r\n// socketService.emit('baba', 'Puk')\r\n// socketService.off('baba', cb)\r\n\r\n\r\nsocketService.on(SOCKET_EVENT_REVIEW_ABOUT_YOU, review => {\r\n  console.log('Review about me!', review);\r\n  \r\n})\r\n\r\n","import { storageService } from './async-storage.service'\r\nimport { httpService } from './http.service'\r\nimport { socketService, SOCKET_EVENT_USER_UPDATED } from './socket.service'\r\nconst STORAGE_KEY_LOGGEDIN_USER = 'loggedinUser'\r\nvar gWatchedUser = null;\r\n\r\nexport const userService = {\r\n    login,\r\n    logout,\r\n    signup,\r\n    getLoggedinUser,\r\n    getUsers,\r\n    getById,\r\n    remove,\r\n    update,\r\n    changeScore\r\n}\r\n\r\nwindow.userService = userService\r\n\r\n\r\nfunction getUsers() {\r\n    return storageService.query('user')\r\n    // return httpService.get(`user`)\r\n}\r\n\r\nasync function getById(userId) {\r\n    const user = await storageService.get('user', userId)\r\n    // const user = await httpService.get(`user/${userId}`)\r\n    gWatchedUser = user;\r\n    return user;\r\n}\r\nfunction remove(userId) {\r\n    return storageService.remove('user', userId)\r\n    // return httpService.delete(`user/${userId}`)\r\n}\r\n\r\nasync function update(user) {\r\n    await storageService.put('user', user)\r\n    // user = await httpService.put(`user/${user._id}`, user)\r\n    // Handle case in which admin updates other user's details\r\n    if (getLoggedinUser()._id === user._id) _saveLocalUser(user)\r\n    return user;\r\n}\r\n\r\nasync function login(userCred) {\r\n    const users = await storageService.query('user')\r\n    const user = users.find(user => user.username === userCred.username)\r\n    return _saveLocalUser(user)\r\n\r\n    // const user = await httpService.post('auth/login', userCred)\r\n    // socketService.emit('set-user-socket', user._id);\r\n    // if (user) return _saveLocalUser(user)\r\n}\r\nasync function signup(userCred) {\r\n    userCred.score = 10000;\r\n    const user = await storageService.post('user', userCred)\r\n    // const user = await httpService.post('auth/signup', userCred)\r\n    // socketService.emit('set-user-socket', user._id);\r\n    return _saveLocalUser(user)\r\n}\r\nasync function logout() {\r\n    sessionStorage.removeItem(STORAGE_KEY_LOGGEDIN_USER)\r\n    // socketService.emit('unset-user-socket');\r\n    // return await httpService.post('auth/logout')\r\n}\r\n\r\nasync function changeScore(by) {\r\n    const user = getLoggedinUser()\r\n    if (!user) throw new Error('Not loggedin')\r\n    user.score = user.score + by || by\r\n    await update(user)\r\n    return user.score\r\n}\r\n\r\n\r\nfunction _saveLocalUser(user) {\r\n    sessionStorage.setItem(STORAGE_KEY_LOGGEDIN_USER, JSON.stringify(user))\r\n    return user\r\n}\r\n\r\nfunction getLoggedinUser() {\r\n    return JSON.parse(sessionStorage.getItem(STORAGE_KEY_LOGGEDIN_USER) || 'null')\r\n}\r\n\r\n\r\n// (async ()=>{\r\n//     await userService.signup({fullname: 'Puki Norma', username: 'user1', password:'123',score: 10000, isAdmin: false})\r\n//     await userService.signup({fullname: 'Master Adminov', username: 'admin', password:'123', score: 10000, isAdmin: true})\r\n//     await userService.signup({fullname: 'Muki G', username: 'muki', password:'123', score: 10000})\r\n// })();\r\n\r\n\r\n\r\n// This IIFE functions for Dev purposes \r\n// It allows testing of real time updates (such as sockets) by listening to storage events\r\n(async () => {\r\n    var user = getLoggedinUser()\r\n    // Dev Helper: Listens to when localStorage changes in OTHER browser\r\n\r\n    // Here we are listening to changes for the watched user (comming from other browsers)\r\n    window.addEventListener('storage', async () => {\r\n        if (!gWatchedUser) return;\r\n        const freshUsers = await storageService.query('user')\r\n        const watchedUser = freshUsers.find(u => u._id === gWatchedUser._id)\r\n        if (!watchedUser) return;\r\n        if (gWatchedUser.score !== watchedUser.score) {\r\n            console.log('Watched user score changed - localStorage updated from another browser')\r\n            socketService.emit(SOCKET_EVENT_USER_UPDATED, watchedUser)\r\n        }\r\n        gWatchedUser = watchedUser\r\n    })\r\n})();\r\n\r\n// This is relevant when backend is connected\r\n// (async () => {\r\n//     var user = getLoggedinUser()\r\n//     if (user) socketService.emit('set-user-socket', user._id)\r\n// })();\r\n\r\n","import { userService } from '../services/user.service.js'\r\n\r\n\r\nconst initialState = {\r\n    count: 10,\r\n    user: userService.getLoggedinUser(),\r\n    users: [],\r\n    watchedUser : null\r\n}\r\nexport function userReducer(state = initialState, action) {\r\n    var newState = state;\r\n    switch (action.type) {\r\n        case 'INCREMENT':\r\n            newState = { ...state, count: state.count + 1 }\r\n            break;\r\n        case 'DECREMENT':\r\n            newState = { ...state, count: state.count - 1 }\r\n            break;\r\n        case 'CHANGE_COUNT':\r\n            newState = { ...state, count: state.count + action.diff }\r\n            break;\r\n        case 'SET_USER':\r\n            newState = { ...state, user: action.user }\r\n            break;\r\n        case 'SET_WATCHED_USER':\r\n            newState = { ...state, watchedUser: action.user }\r\n            break;\r\n        case 'REMOVE_USER':\r\n            newState = {\r\n                ...state,\r\n                users: state.users.filter(user => user._id !== action.userId)\r\n            }\r\n            break;\r\n        case 'SET_USERS':\r\n            newState = { ...state, users: action.users }\r\n            break;\r\n        case 'SET_SCORE':\r\n            newState = { ...state, user: { ...state.user, score: action.score } }\r\n            break;\r\n        default:\r\n    }\r\n    // For debug:\r\n    // window.userState = newState;\r\n    // console.log('State:', newState);\r\n    return newState;\r\n\r\n}\r\n","const initialState = {\r\n  reviews: [],\r\n}\r\n\r\nexport function reviewReducer(state = initialState, action = {}) {\r\n  switch (action.type) {\r\n    case 'SET_REVIEWS':\r\n      return { ...state, reviews: action.reviews }\r\n    case 'ADD_REVIEW':\r\n      return { ...state, reviews: [...state.reviews, action.review] }\r\n    case 'REMOVE_REVIEW':\r\n      return { ...state, reviews: state.reviews.filter(review => review._id !== action.reviewId) }\r\n    case 'UPDATE_REVIEW':\r\n      return {\r\n        ...state,\r\n        reviews: state.reviews.map(review =>\r\n          review._id === action.review._id ? action.review : review\r\n        )}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","const initialState = {\r\n  isLoading: false\r\n};\r\n\r\nexport function systemReducer (state = initialState, action = {}) {\r\n  switch (action.type) {\r\n    case 'LOADING_START':\r\n      return { ...state, isLoading: true }\r\n    case 'LOADING_DONE':\r\n      return { ...state, isLoading: false }\r\n    default: return state\r\n  }\r\n}\r\n","// const { createStore, applyMiddleware, combineReducers, compose } = Redux\r\n// const thunk = ReduxThunk.default\r\n\r\nimport { createStore, applyMiddleware, combineReducers, compose } from 'redux'\r\nimport thunk from 'redux-thunk'\r\n\r\n\r\nimport { carReducer } from './car.reducer.js'\r\nimport { userReducer } from './user.reducer.js'\r\nimport { reviewReducer } from './review.reducer'\r\nimport { systemReducer } from './system.reducer'\r\n\r\nconst rootReducer = combineReducers({\r\n    carModule: carReducer,\r\n    userModule: userReducer,\r\n    systemModule: systemReducer,\r\n    reviewModule: reviewReducer,\r\n})\r\n\r\n\r\n// export const store = createStore(rootReducer, applyMiddleware(thunk))\r\n// window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__();\r\n// Lets wire up thunk and also redux-dev-tools:\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)))\r\n// export const store = createStore(rootReducer, applyMiddleware(thunk))\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/logo.8523ccde.png\";","import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport logo from '../assets/img/logo.png'\r\n\r\nclass _HomePage extends React.Component {\r\n    state = {}\r\n\r\n    changeCount = (diff) => {\r\n        console.log('Changing count by:', diff);\r\n        const action = { type: 'CHANGE_COUNT', diff }\r\n        this.props.dispatch(action)\r\n    }\r\n\r\n    render() {\r\n        const { count } = this.props\r\n        return (\r\n            <section>\r\n                <img src={logo} alt=\"Logo\" style={{maxWidth: '300px'}} />\r\n                <h2>\r\n                    Count {count}\r\n                    <button onClick={() => {\r\n                        this.changeCount(1)\r\n                    }}>+</button>\r\n                    <button onClick={() => {\r\n                        this.changeCount(10)\r\n                    }}>+10</button>\r\n                </h2 >\r\n            </section >\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        count: state.userModule.count\r\n    }\r\n}\r\n\r\nexport const HomePage = connect(mapStateToProps)(_HomePage)","import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { CSSTransitionGroup } from 'react-transition-group'\r\n\r\n\r\nfunction FancyBox(props) {\r\n        return <div className=\"fancy-box\">\r\n            <button style={{ float: 'right' }} onClick={props.onClose}>x</button>\r\n            {props.children}\r\n        </div>\r\n    }\r\n    \r\nFancyBox.propTypes = {\r\n    onClose: PropTypes.func.isRequired\r\n}\r\n\r\nfunction Contacts() {\r\n    return <section style={{ height: '50vh', backgroundColor: 'pink' }}>\r\n        <h2>Contacts</h2>\r\n    </section>\r\n}\r\nfunction Projects() {\r\n    const [projs, setProjs] = useState(['Puki Proj', 'Muki Proj'])\r\n    const projList = projs.map((proj, idx) => (\r\n        <div className=\"proj-preview\" key={proj} onClick={(ev) => {\r\n            ev.stopPropagation();\r\n            setProjs(projs.filter(p => p !== proj))\r\n        }}>\r\n          {proj}\r\n        </div>\r\n      ));\r\n    return <section style={{ height: '50vh', backgroundColor: 'lightblue' }}>\r\n        <h2>Projects</h2>\r\n        <CSSTransitionGroup transitionName=\"example\" transitionEnterTimeout={500}\r\n            transitionLeaveTimeout={300}>\r\n            {projList}\r\n        </CSSTransitionGroup>\r\n        <button onClick={ev => {\r\n            ev.stopPropagation();\r\n            setProjs([...projs, 'Babu Proj' + Date.now() % 100])\r\n        }}>Add</button>\r\n    </section >\r\n}\r\n\r\nfunction SplitPane(props) {\r\n\r\n    const [width, setWidth] = useState(30)\r\n\r\n    if (false && width === 60) {\r\n        throw new Error('Projects cannot load')\r\n    }\r\n    return (\r\n        <div className=\"split-pane\" style={{\r\n            display: 'flex'\r\n        }}>\r\n            <div style={{ width: width + '%' }} onClick={() => {\r\n                if (width + 10 <= 100) setWidth(width + 10)\r\n            }}>\r\n                {props.left}\r\n            </div>\r\n            <div style={{ flex: 1 }} onClick={() => {\r\n                if (width > 10) setWidth(width - 10)\r\n            }}>\r\n                {props.right}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport class AboutUs extends React.Component {\r\n    state = {\r\n        count: 1000,\r\n    }\r\n    componentDidMount(){\r\n        // this.interval = setInterval(() => {\r\n        //     console.log('Setting Followers Count');\r\n        //     this.setState(({ count }) => ({ count: count + utilService.getRandomIntInclusive(5, 20) }))\r\n        // }, 2500)\r\n    }\r\n    componentWillUnmount() {\r\n        clearInterval(this.interval)\r\n    }\r\n\r\n    shouldComponentUpdate() {\r\n        return true\r\n    }\r\n    \r\n    onTellMeMore = () =>{\r\n        console.log('Telling you more');\r\n    }\r\n    render() {\r\n        const {count} = this.state\r\n        return (\r\n            <section>\r\n                <h2>About Us</h2>\r\n                <MyErrorBoundary>\r\n\r\n                <SplitPane\r\n                        left={\r\n                            <Contacts />\r\n                        }\r\n                        right={\r\n                            <Projects />\r\n                        } />\r\n\r\n                </MyErrorBoundary>\r\n\r\n                <FancyBox onClose={() => console.log('ok, closing')}>\r\n                    <h3>{count.toLocaleString()} Followers</h3>\r\n                    <button onClick={this.onTellMeMore}>Tell me More</button>\r\n                </FancyBox>\r\n\r\n                <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Magni aperiam quo veniam velit dolor reprehenderit, laudantium consequatur neque numquam labore quae. Accusamus libero perferendis ducimus? Alias unde hic quisquam doloremque.</p>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nclass MyErrorBoundary extends React.Component {\r\n    state = { error: null, errorInfo: null };\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        // Catch errors in children and re-render with error message\r\n        // Note: in development the error is still presented on screen and you need to ESC to see the fallback UI\r\n        this.setState({\r\n            error,\r\n            errorInfo\r\n        })\r\n        // TODO: Log error to an error reporting service\r\n        // logger.report(error)\r\n    }\r\n    render() {\r\n        if (this.state.errorInfo) {\r\n            // Error path\r\n            return (\r\n                <div>\r\n                    <h2>Something went wrong.</h2>\r\n                    \r\n                    <details style={{ whiteSpace: 'pre-wrap' }}>\r\n                        {this.state.error && this.state.error.toString()}\r\n                        <br />\r\n                        {this.state.errorInfo.componentStack}\r\n                    </details>\r\n                </div>\r\n            );\r\n        }\r\n        // Normally, just render children\r\n        return this.props.children;\r\n    }\r\n}\r\n","export const utilService = {\r\n    makeId,\r\n    makeLorem,\r\n    getRandomIntInclusive,\r\n    delay\r\n}\r\n\r\nfunction makeId(length = 6) {\r\n    var txt = '';\r\n    var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n\r\n    for (var i = 0; i < length; i++) {\r\n        txt += possible.charAt(Math.floor(Math.random() * possible.length));\r\n    }\r\n\r\n    return txt;\r\n}\r\n\r\nfunction makeLorem(size = 100) {\r\n    var words = ['The sky', 'above', 'the port', 'was', 'the color of television', 'tuned', 'to', 'a dead channel', '.', 'All', 'this happened', 'more or less', '.', 'I', 'had', 'the story', 'bit by bit', 'from various people', 'and', 'as generally', 'happens', 'in such cases', 'each time', 'it', 'was', 'a different story', '.', 'It', 'was', 'a pleasure', 'to', 'burn'];\r\n    var txt = '';\r\n    while (size > 0) {\r\n        size--;\r\n        txt += words[Math.floor(Math.random() * words.length)] + ' ';\r\n    }\r\n    return txt;\r\n}\r\n\r\nfunction getRandomIntInclusive(min, max) {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min + 1)) + min; //The maximum is inclusive and the minimum is inclusive \r\n}\r\n\r\nfunction delay(ms = 1500) {\r\n    return new Promise(resolve => {\r\n        setTimeout(resolve, ms)\r\n    })\r\n}\r\n\r\n","\r\nimport { storageService } from './async-storage.service.js'\r\nimport { utilService } from './util.service.js'\r\nimport { userService } from './user.service.js'\r\n\r\nconst STORAGE_KEY = 'car'\r\nconst listeners = []\r\n\r\nexport const carService = {\r\n    query,\r\n    getById,\r\n    save,\r\n    remove,\r\n    getEmptyCar,\r\n    subscribe\r\n    \r\n}\r\nwindow.cs = carService;\r\n\r\n\r\nfunction query() {\r\n    return storageService.query(STORAGE_KEY)\r\n}\r\nfunction getById(carId) {\r\n    return storageService.get(STORAGE_KEY, carId)\r\n}\r\nfunction remove(carId) {\r\n    // return new Promise((resolve, reject) => {\r\n    //     setTimeout(reject, 2000)\r\n    // })\r\n    // return Promise.reject('Not now!');\r\n    return storageService.remove(STORAGE_KEY, carId)\r\n}\r\nfunction save(car) {\r\n    if (car._id) {\r\n        return storageService.put(STORAGE_KEY, car)\r\n    } else {\r\n        car.owner = userService.getLoggedinUser()\r\n        return storageService.post(STORAGE_KEY, car)\r\n    }\r\n}\r\n\r\nfunction getEmptyCar() {\r\n    return {\r\n        vendor: 'Susita-' + (Date.now() % 1000),\r\n        price: utilService.getRandomIntInclusive(1000, 9000),\r\n    }\r\n}\r\n\r\nfunction subscribe(listener) {\r\n    listeners.push(listener)\r\n}\r\n\r\nfunction _notifySubscribersCarsChanged(cars) {\r\n    console.log('Notifying Listeners');\r\n    listeners.forEach(listener => listener(cars))\r\n}\r\n\r\nwindow.addEventListener('storage', () => {\r\n    console.log('Storage Changed from another Browser!');\r\n    query()\r\n        .then(cars => {\r\n            _notifySubscribersCarsChanged(cars)\r\n        }) \r\n})\r\n\r\n// TEST DATA\r\n// storageService.post(STORAGE_KEY, {vendor: 'Subali Rahok 2', price: 980}).then(x => console.log(x))\r\n\r\n\r\n\r\n\r\n","function on(eventName, listener) {\r\n\r\n    const callListener = ({ detail }) => {\r\n        listener(detail);\r\n    };\r\n\r\n    window.addEventListener(eventName, callListener);\r\n\r\n    return () => {\r\n        window.removeEventListener(eventName, callListener);\r\n    };\r\n}\r\n\r\nfunction emit(eventName, data) {\r\n    window.dispatchEvent(new CustomEvent(eventName, { detail: data }));\r\n}\r\n\r\nexport const eventBusService = { on, emit };\r\n\r\nexport function showUserMsg(txt, type = '') {\r\n    eventBusService.emit('show-user-msg', { txt, type })\r\n}\r\nexport function showSuccessMsg(txt) {\r\n    showUserMsg(txt, 'success')\r\n}\r\nexport function showErrorMsg(txt) {\r\n    showUserMsg(txt, 'danger')\r\n}\r\n\r\nwindow.myBus = eventBusService;\r\nwindow.showUserMsg = showUserMsg;\r\n\r\n// eventBusService.on('baba', (x)=>console.log('Hi Baba', x))\r\n// eventBusService.on('baba', (x)=>console.log('Hello Baba Ji', x))\r\n// eventBusService.emit('baba', [5, 8, 11])\r\n// setTimeout(()=>{\r\n//     eventBusService.emit('baba', 17)\r\n// }, 2000)\r\n\r\n/* Listening Component...\r\n    import {eventBusService} from 'path...event-bus-service'\r\n    eventBusService.on('some-event', (dataFromEvent) => {\r\n    do something with dataFromEvent\r\n    })\r\n\r\n   Receiving Component...\r\n    eventBusService.emit('some-event', data)\r\n*/","import { carService } from \"../services/car.service.js\";\r\nimport { userService } from \"../services/user.service.js\";\r\nimport { showSuccessMsg, showErrorMsg } from '../services/event-bus.service.js'\r\n\r\nexport function loadCars() {\r\n    return (dispatch) => {\r\n        carService.query()\r\n            .then(cars => {\r\n                console.log('Cars from DB:', cars)\r\n                dispatch({\r\n                    type: 'SET_CARS',\r\n                    cars\r\n                })\r\n            })\r\n            .catch(err => {\r\n                showErrorMsg('Cannot load cars')\r\n                console.log('Cannot load cars', err)\r\n            })\r\n\r\n        carService.subscribe((cars) => {\r\n            console.log('Got notified');\r\n            dispatch({\r\n                type: 'SET_CARS',\r\n                cars\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nexport function onRemoveCar(carId) {\r\n    return (dispatch, getState) => {\r\n        carService.remove(carId)\r\n            .then(() => {\r\n                console.log('Deleted Succesfully!');\r\n                dispatch({\r\n                    type: 'REMOVE_CAR',\r\n                    carId\r\n                })\r\n                showSuccessMsg('Car removed')\r\n            })\r\n            .catch(err => {\r\n                showErrorMsg('Cannot remove car')\r\n                console.log('Cannot remove car', err)\r\n            })\r\n    }\r\n}\r\n\r\nexport function onAddCar() {\r\n    return (dispatch) => {\r\n        const car = carService.getEmptyCar();\r\n        carService.save(car)\r\n            .then(savedCar => {\r\n                console.log('Added Car', savedCar);\r\n                dispatch({\r\n                    type: 'ADD_CAR',\r\n                    car: savedCar\r\n                })\r\n                showSuccessMsg('Car added')\r\n            })\r\n            .catch(err => {\r\n                showErrorMsg('Cannot add car')\r\n                console.log('Cannot add car', err)\r\n            })\r\n    }\r\n}\r\n\r\nexport function onEditCar(carToSave) {\r\n    return (dispatch) => {\r\n        carService.save(carToSave)\r\n            .then(savedCar => {\r\n                console.log('Updated Car:', savedCar);\r\n                dispatch({\r\n                    type: 'UPDATE_CAR',\r\n                    car: savedCar\r\n                })\r\n                showSuccessMsg('Car updated')\r\n            })\r\n            .catch(err => {\r\n                showErrorMsg('Cannot update car')\r\n                console.log('Cannot save car', err)\r\n            })\r\n    }\r\n}\r\n\r\nexport function addToCart(car) {\r\n    return (dispatch) => {\r\n        dispatch({\r\n            type: 'ADD_TO_CART',\r\n            car\r\n        })\r\n    }\r\n}\r\nexport function removeFromCart(carId) {\r\n    return (dispatch) => {\r\n        dispatch({\r\n            type: 'REMOVE_FROM_CART',\r\n            carId\r\n        })\r\n    }\r\n}\r\n\r\nexport function checkout() {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            const state = getState()\r\n            const total = state.carModule.cart.reduce((acc, car) => acc + car.price, 0)\r\n            const score = await userService.changeScore(-total)\r\n            dispatch({ type: 'SET_SCORE', score })\r\n            dispatch({ type: 'CLEAR_CART'})\r\n            showSuccessMsg('Charged you: $' + total.toLocaleString())\r\n\r\n\r\n        } catch (err) {\r\n            showErrorMsg('Cannot checkout, login first')\r\n            console.log('CarActions: err in checkout', err)\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n// Demo for Optimistic Mutation (IOW - Assuming the server call will work, so updating the UI first)\r\nexport function onRemoveCarOptimistic(carId) {\r\n\r\n    return (dispatch, getState) => {\r\n\r\n        dispatch({\r\n            type: 'REMOVE_CAR',\r\n            carId\r\n        })\r\n        showSuccessMsg('Car removed')\r\n\r\n        carService.remove(carId)\r\n            .then(() => {\r\n                console.log('Server Reported - Deleted Succesfully');\r\n            })\r\n            .catch(err => {\r\n                showErrorMsg('Cannot remove car')\r\n                console.log('Cannot load cars', err)\r\n                dispatch({\r\n                    type: 'UNDO_REMOVE_CAR',\r\n                })\r\n            })\r\n    }\r\n}","import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\n\r\nimport { loadCars, onAddCar, onEditCar, onRemoveCar, addToCart } from '../store/car.actions.js'\r\nimport { showSuccessMsg } from '../services/event-bus.service.js'\r\n\r\nclass _CarApp extends React.Component {\r\n    state = {\r\n    }\r\n    componentDidMount() {\r\n        this.props.loadCars()\r\n    }\r\n\r\n    onRemoveCar = (carId) => {\r\n        this.props.onRemoveCar(carId)\r\n    }\r\n    onAddCar = () => {\r\n       this.props.onAddCar()\r\n    }\r\n    onEditCar = (car) => {\r\n        const price = +prompt('New price?')\r\n        const carToSave = { ...car, price }\r\n        this.props.onEditCar(carToSave)\r\n    }\r\n    addToCart = (car) => {\r\n        console.log(`Adding ${car.vendor} to Cart`)\r\n        this.props.addToCart(car)\r\n        showSuccessMsg('Added to Cart')\r\n    }\r\n    render() {\r\n        const { cars } = this.props\r\n        return (\r\n            <div>\r\n                <h3>Cars App</h3>\r\n                <main>\r\n                    <button onClick={this.onAddCar}>Add Car ⛐</button>\r\n                    <ul className=\"car-list\">\r\n                        {cars.map(car =>\r\n                            <li className=\"car-preview\" key={car._id}>\r\n                                <h4>{car.vendor}</h4>\r\n                                <h1>⛐</h1>\r\n                                <p>Price: <span>${car.price.toLocaleString()}</span></p>\r\n                                <p>Owner: <span>{car.owner && car.owner.fullname}</span></p>\r\n                                <div>\r\n                                    <button onClick={() => {\r\n                                        this.onRemoveCar(car._id)\r\n                                    }}>x</button>\r\n                                    <button onClick={() => {\r\n                                        this.onEditCar(car)\r\n                                    }}>Edit</button>\r\n                                </div>\r\n                                <button className=\"buy\" onClick={() => {\r\n                                    this.addToCart(car)\r\n                                }}>Add to Cart</button>\r\n\r\n                            </li>)}\r\n                    </ul>\r\n                </main>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        cars: state.carModule.cars\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    loadCars,\r\n    onRemoveCar,\r\n    onAddCar,\r\n    onEditCar,\r\n    addToCart\r\n}\r\n\r\n\r\nexport const CarApp = connect(mapStateToProps, mapDispatchToProps)(_CarApp)","import { httpService } from './http.service'\r\nimport { storageService } from './async-storage.service'\r\nimport {userService} from './user.service'\r\nimport { socketService, SOCKET_EVENT_REVIEW_ADDED } from './socket.service'\r\n\r\nexport const reviewService = {\r\n  add,\r\n  query,\r\n  remove\r\n}\r\n\r\n\r\n// More ways to send query params:\r\n// return axios.get('api/toy/?id=1223&balance=13')\r\n// return axios.get('api/toy/?', {params: {id: 1223, balanse:13}})\r\n\r\nfunction query(filterBy) {\r\n  var queryStr = (!filterBy) ? '' : `?name=${filterBy.name}&sort=anaAref`\r\n  // return httpService.get(`review${queryStr}`)\r\n  return storageService.query('review')\r\n}\r\n\r\nfunction remove(reviewId) {\r\n  // return httpService.delete(`review/${reviewId}`)\r\n  return storageService.remove('review', reviewId)\r\n\r\n}\r\nasync function add(review) {\r\n  // const addedReview = await httpService.post(`review`, review)\r\n\r\n  review.byUser = userService.getLoggedinUser()\r\n  review.aboutUser = await userService.getById(review.aboutUserId)\r\n  const addedReview = storageService.post('review', review)\r\n\r\n  return addedReview\r\n}\r\n\r\n// This IIFE functions for Dev purposes \r\n// It allows testing of real time updates (such as sockets) by listening to storage events\r\n(async () => {\r\n  var reviews = await storageService.query('review')\r\n\r\n  // Dev Helper: Listens to when localStorage changes in OTHER browser\r\n  window.addEventListener('storage', async () => {\r\n    console.log('Storage updated');\r\n    const freshReviews = await storageService.query('review')\r\n    if (freshReviews.length === reviews.length + 1 ){\r\n      console.log('Review Added - localStorage updated from another browser')\r\n      socketService.emit(SOCKET_EVENT_REVIEW_ADDED, freshReviews[freshReviews.length-1])\r\n    }\r\n    reviews = freshReviews\r\n  });\r\n})()\r\n\r\n","import { userService } from \"../services/user.service.js\";\r\nimport { showErrorMsg } from '../services/event-bus.service.js'\r\nimport { socketService, SOCKET_EMIT_USER_WATCH, SOCKET_EVENT_USER_UPDATED } from \"../services/socket.service.js\";\r\n\r\nexport function loadUsers() {\r\n    return async dispatch => {\r\n        try {\r\n            dispatch({ type: 'LOADING_START' })\r\n            const users = await userService.getUsers()\r\n            dispatch({ type: 'SET_USERS', users })\r\n        } catch (err) {\r\n            console.log('UserActions: err in loadUsers', err)\r\n        } finally {\r\n            dispatch({ type: 'LOADING_DONE' })\r\n        }\r\n    }\r\n}\r\n\r\nexport function removeUser(userId) {\r\n    return async dispatch => {\r\n        try {\r\n            await userService.remove(userId)\r\n            dispatch({ type: 'REMOVE_USER', userId })\r\n        } catch (err) {\r\n            console.log('UserActions: err in removeUser', err)\r\n        }\r\n    }\r\n}\r\n\r\nexport function onLogin(credentials) {\r\n    return async (dispatch) => {\r\n        try {\r\n            const user = await userService.login(credentials)\r\n            dispatch({\r\n                type: 'SET_USER',\r\n                user\r\n            })\r\n        } catch (err) {\r\n            showErrorMsg('Cannot login')\r\n            console.log('Cannot login', err)\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport function onSignup(credentials) {\r\n    return (dispatch) => {\r\n        userService.signup(credentials)\r\n            .then(user => {\r\n                dispatch({\r\n                    type: 'SET_USER',\r\n                    user\r\n                })\r\n            })\r\n            .catch(err => {\r\n                showErrorMsg('Cannot signup')\r\n                console.log('Cannot signup', err)\r\n            })\r\n\r\n    }\r\n}\r\n\r\nexport function onLogout() {\r\n    return (dispatch) => {\r\n        userService.logout()\r\n            .then(() => dispatch({\r\n                type: 'SET_USER',\r\n                user: null\r\n            }))\r\n            .catch(err => {\r\n                showErrorMsg('Cannot logout')\r\n                console.log('Cannot logout', err)\r\n            })\r\n    }\r\n}\r\n\r\nexport function loadAndWatchUser(userId) {\r\n    return async (dispatch) => {\r\n        try {\r\n            const user = await userService.getById(userId);\r\n            dispatch({ type: 'SET_WATCHED_USER', user })\r\n            socketService.emit(SOCKET_EMIT_USER_WATCH, userId)\r\n            socketService.off(SOCKET_EVENT_USER_UPDATED)\r\n            socketService.on(SOCKET_EVENT_USER_UPDATED, user => {\r\n                console.log('USER UPADTED FROM SOCKET');\r\n                dispatch({ type: 'SET_WATCHED_USER', user })\r\n            })\r\n        } catch (err) {\r\n            showErrorMsg('Cannot load user')\r\n            console.log('Cannot load user', err)\r\n        }\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { loadReviews, addReview, removeReview } from '../store/review.actions'\r\nimport { loadUsers } from '../store/user.actions.js'\r\n\r\nclass _ReviewApp extends Component {\r\n  state = {\r\n    reviewToEdit: {\r\n      txt: '',\r\n      aboutUserId: ''\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.props.loadReviews()\r\n    this.props.loadUsers()\r\n  }\r\n\r\n  handleChange = ev => {\r\n    const { name, value } = ev.target\r\n    this.setState(prevState => ({\r\n      reviewToEdit: {\r\n        ...prevState.reviewToEdit,\r\n        [name]: value\r\n      }\r\n    }))\r\n  }\r\n\r\n  addReview = async ev => {\r\n    ev.preventDefault()\r\n    const { reviewToEdit } = this.state\r\n    if (!reviewToEdit.txt || !reviewToEdit.aboutUserId) return alert('All fields are required')\r\n    await this.props.addReview(this.state.reviewToEdit)\r\n    this.setState({ reviewToEdit: { txt: '', aboutUserId: '' } })\r\n  }\r\n\r\n  onRemove = async reviewId => {\r\n    await this.props.removeReview(reviewId)\r\n    // this.props.history.push('/login')\r\n  }\r\n\r\n  canRemove = review =>\r\n    (review.byUser._id === this.props.loggedInUser?._id || this.props.loggedInUser?.isAdmin)\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"home\">\r\n        <h1>Reviews and Gossip</h1>\r\n        {this.props.reviews && <ul className=\"review-list\">\r\n          {this.props.reviews.map(review => (\r\n            <li key={review._id}>\r\n              { this.canRemove(review) &&\r\n                <button onClick={() => this.onRemove(review._id)}>X</button>}\r\n              <p>\r\n                About:\r\n                <Link to={`user/${review.aboutUser._id}`}>\r\n                  {review.aboutUser.fullname}\r\n                </Link>\r\n              </p>\r\n              <h3>{review.txt}</h3>\r\n\r\n              <p>\r\n                By:\r\n                <Link to={`user/${review.byUser._id}`}>\r\n                  {review.byUser.fullname}\r\n                </Link>\r\n              </p>\r\n            </li>\r\n          ))}\r\n        </ul>}\r\n        {this.props.users && this.props.loggedInUser &&\r\n          <form onSubmit={this.addReview}>\r\n            <select\r\n              onChange={this.handleChange}\r\n              value={this.state.reviewToEdit.aboutUserId}\r\n              name=\"aboutUserId\"\r\n            >\r\n              <option value=\"\">Select User</option>\r\n              {this.props.users.map(user => (\r\n                <option key={user._id} value={user._id}>\r\n                  {user.fullname}\r\n                </option>\r\n              ))}\r\n            </select>\r\n            <textarea\r\n              name=\"txt\"\r\n              onChange={this.handleChange}\r\n              value={this.state.reviewToEdit.txt}\r\n            ></textarea>\r\n            <button>Submit</button>\r\n          </form>}\r\n        <hr />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    reviews: state.reviewModule.reviews,\r\n    users: state.userModule.users,\r\n    loggedInUser: state.userModule.user\r\n  }\r\n}\r\nconst mapDispatchToProps = {\r\n  loadReviews,\r\n  loadUsers,\r\n  addReview,\r\n  removeReview\r\n}\r\n\r\nexport const ReviewApp = connect(mapStateToProps, mapDispatchToProps)(_ReviewApp)\r\n","import { reviewService } from '../services/review.service'\r\nimport { socketService, SOCKET_EVENT_REVIEW_ADDED } from '../services/socket.service'\r\nimport { userService } from '../services/user.service'\r\n\r\nconst SCORE_FOR_REVIEW = 500\r\n\r\nexport function loadReviews() {\r\n  return async dispatch => {\r\n    try {\r\n      const reviews = await reviewService.query()\r\n      dispatch({ type: 'SET_REVIEWS', reviews })\r\n      socketService.on(SOCKET_EVENT_REVIEW_ADDED, (review) =>{\r\n        dispatch({ type: 'ADD_REVIEW', review })\r\n      })\r\n\r\n    } catch (err) {\r\n      console.log('ReviewActions: err in loadReviews', err)\r\n    }\r\n  }\r\n}\r\n\r\nexport function addReview(review) {\r\n  return async dispatch => {\r\n    try {\r\n      const addedReview = await reviewService.add(review)\r\n      dispatch({ type: 'ADD_REVIEW', review: addedReview })\r\n\r\n      const score = await userService.changeScore(SCORE_FOR_REVIEW)\r\n      dispatch({ type: 'SET_SCORE', score })\r\n      \r\n    } catch (err) {\r\n      console.log('ReviewActions: err in addReview', err)\r\n    }\r\n  }\r\n}\r\n\r\nexport function removeReview(reviewId) {\r\n  return async dispatch => {\r\n    try {\r\n      await reviewService.remove(reviewId)\r\n      dispatch({ type: 'REMOVE_REVIEW', reviewId })\r\n    } catch (err) {\r\n      console.log('ReviewActions: err in removeReview', err)\r\n    }\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { socketService } from '../services/socket.service'\r\n\r\nclass _ChatApp extends Component {\r\n  state = {\r\n    msg: { txt: '' },\r\n    msgs: [],\r\n    topic: 'Love',\r\n    isBotMode: true\r\n  }\r\n\r\n  componentDidMount() {\r\n    socketService.setup()\r\n    socketService.emit('chat topic', this.state.topic)\r\n    socketService.on('chat addMsg', this.addMsg)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    socketService.off('chat addMsg', this.addMsg)\r\n    socketService.terminate()\r\n    clearTimeout(this.timeout)\r\n  }\r\n\r\n  addMsg = newMsg => {\r\n    this.setState(prevState => ({ msgs: [...prevState.msgs, newMsg] }))\r\n    if (this.state.isBotMode) this.sendBotResponse();\r\n  }\r\n\r\n  sendBotResponse = () => {\r\n    // Handle case: send single bot response (debounce).\r\n    this.timeout && clearTimeout(this.timeout)\r\n    this.timeout = setTimeout(() => {\r\n      this.setState(prevState => ({ msgs: [...prevState.msgs, { from: 'Bot', txt: 'You are amazing!' }] }))\r\n    }, 1500)\r\n  }\r\n\r\n  changeTopic = () => {\r\n    socketService.emit('chat topic', this.state.topic)\r\n  }\r\n\r\n  sendMsg = ev => {\r\n    ev.preventDefault()\r\n    const from = this.props.loggedInUser?.fullname || 'Me'\r\n    socketService.emit('chat newMsg', { from, txt: this.state.msg.txt })\r\n    this.setState({ msg: { from: 'Me', txt: '' } })\r\n  }\r\n\r\n  handleChange = ev => {\r\n    const { name, value } = ev.target\r\n    this.setState({ [name]: value }, this.changeTopic)\r\n  }\r\n\r\n  msgHandleChange = ev => {\r\n    const { name, value } = ev.target\r\n    this.setState(prevState => {\r\n      return {\r\n        msg: {\r\n          ...prevState.msg,\r\n          [name]: value\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"chat\">\r\n        <h2>Lets Chat about {this.state.topic}</h2>\r\n        <label>\r\n          <input\r\n            type=\"checkbox\"\r\n            name=\"isBotMode\"\r\n            checked={this.state.isBotMode}\r\n            onChange={(ev) => this.setState({ isBotMode: ev.target.checked })}\r\n          />\r\n          Bot Mode\r\n        </label>\r\n        <div>\r\n          <label>\r\n            <input\r\n              type=\"radio\"\r\n              name=\"topic\"\r\n              value=\"Love\"\r\n              checked={this.state.topic === 'Love'}\r\n              onChange={this.handleChange}\r\n            />\r\n            Love\r\n          </label>\r\n          <label>\r\n            <input\r\n              type=\"radio\"\r\n              name=\"topic\"\r\n              value=\"Politics\"\r\n              checked={this.state.topic === 'Politics'}\r\n              onChange={this.handleChange}\r\n            />\r\n            Politics\r\n          </label>\r\n        </div>\r\n        <form onSubmit={this.sendMsg}>\r\n          <input\r\n            type=\"text\"\r\n            value={this.state.msg.txt}\r\n            onChange={this.msgHandleChange}\r\n            name=\"txt\"\r\n            autoComplete=\"off\"\r\n          />\r\n          <button>Send</button>\r\n        </form>\r\n        <ul>\r\n          {this.state.msgs.map((msg, idx) => (\r\n            <li key={idx}>{msg.from}: {msg.txt}</li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    loggedInUser: state.userModule.loggedInUser\r\n  }\r\n}\r\nconst mapDispatchToProps = {\r\n}\r\n\r\nexport const ChatApp = connect(mapStateToProps, mapDispatchToProps)(_ChatApp)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport {loadUsers, removeUser} from '../store/user.actions'\r\n\r\n\r\nclass _AdminApp extends React.Component {\r\n    state = {}\r\n\r\n    componentDidMount() {\r\n        this.props.loadUsers()\r\n    }\r\n\r\n    \r\n\r\n    render() {\r\n        const { isLoading, users, removeUser, loadUsers } = this.props\r\n        return <section className=\"admin\">\r\n                <button onClick={loadUsers}>Refresh Users</button>\r\n                {isLoading && 'Loading...'}\r\n                {users && <ul>\r\n\r\n                    {users.map(user => (\r\n                        <li key={user._id}>\r\n                            <pre>{JSON.stringify(user, null, 2)}</pre>\r\n                            <button\r\n                                onClick={() => {\r\n                                    removeUser(user._id)\r\n                                }}\r\n                            >\r\n                                Remove {user.username}\r\n                            </button>\r\n                        </li>\r\n                    ))}\r\n                </ul>}\r\n        </section>\r\n\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        isLoading: state.systemModule.isLoading,\r\n        users: state.userModule.users\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadUsers,\r\n    removeUser\r\n}\r\n\r\n\r\nexport const AdminApp = connect(mapStateToProps, mapDispatchToProps)(_AdminApp)","import {HomePage} from './pages/home-page.jsx'\r\nimport {AboutUs} from './pages/about-us.jsx'\r\nimport {CarApp} from './pages/car-app.jsx'\r\nimport {ReviewApp} from './pages/review-app.jsx'\r\nimport { ChatApp } from './pages/chat-app.jsx'\r\nimport { AdminApp } from './pages/admin-app.jsx'\r\n\r\n// Routes accesible from the main navigation (in AppHeader)\r\nconst routes = [\r\n    {\r\n        path:'/',\r\n        component: HomePage,\r\n        label: 'Home 🏠',\r\n    },\r\n    {\r\n        path:'/car',\r\n        component: CarApp,\r\n        label: 'Cars'\r\n    },\r\n    {\r\n        path:'/review',\r\n        component: ReviewApp,\r\n        label: 'Reviews'\r\n    },\r\n    {\r\n        path:'/chat',\r\n        component: ChatApp,\r\n        label: 'Chat'\r\n    },\r\n    {\r\n        path:'/about',\r\n        component: AboutUs,\r\n        label: 'About us'\r\n    },\r\n    {\r\n        path:'/admin',\r\n        component: AdminApp,\r\n        label: 'Admin Only'\r\n    }\r\n]\r\n\r\nexport default routes;","import React from 'react'\r\nimport { userService } from '../services/user.service'\r\n\r\nexport class LoginSignup extends React.Component {\r\n    state = {\r\n        credentials: {\r\n            username: '',\r\n            password: '',\r\n            fullname: ''\r\n        },\r\n        isSignup: false,\r\n        users: []\r\n    }\r\n    async componentDidMount() {\r\n        const users = await userService.getUsers()\r\n        this.setState({users})        \r\n    }\r\n    clearState = () => {\r\n        const clearTemplate = {\r\n            credentials: {\r\n                username: '',\r\n                password: '',\r\n                fullname: ''\r\n            },\r\n            isSignup: false\r\n        }\r\n        this.setState({ clearTemplate })\r\n    }\r\n\r\n    handleChange = (ev) => {\r\n        const field = ev.target.name;\r\n        const value = ev.target.value;\r\n        this.setState({ credentials: { ...this.state.credentials, [field]: value } });\r\n    }\r\n\r\n    onLogin = (ev = null) => {\r\n        if (ev) ev.preventDefault();\r\n        if (!this.state.credentials.username) return;\r\n        this.props.onLogin(this.state.credentials);\r\n        this.clearState()\r\n    }\r\n\r\n    onSignup = (ev = null) => {\r\n        if (ev) ev.preventDefault();\r\n        if (!this.state.credentials.username || !this.state.credentials.password || !this.state.credentials.fullname) return;\r\n        this.props.onSignup(this.state.credentials);\r\n        this.clearState()\r\n    }\r\n\r\n    toggleSignup = () => {\r\n        this.setState({ isSignup: !this.state.isSignup })\r\n    }\r\n\r\n    render() {\r\n        const { username, password, fullname } = this.state.credentials;\r\n        const { isSignup, users } = this.state;\r\n        return (\r\n            <div className=\"login-page\">\r\n                <p>\r\n                    <button className=\"btn-link\" onClick={this.toggleSignup}>{!isSignup ? 'Signup' : 'Login'}</button>\r\n                </p>\r\n                {!isSignup && <form className=\"login-form\" onSubmit={this.onLogin}>\r\n                    <select\r\n                        name=\"username\"\r\n                        value={username}\r\n                        onChange={this.handleChange}\r\n                    >\r\n                        <option value=\"\">Select User</option>\r\n                        {users.map(user => <option key={user._id} value={user.username}>{user.fullname}</option>)}\r\n                    </select>\r\n\r\n                    {/* <input\r\n                        type=\"text\"\r\n                        name=\"username\"\r\n                        value={username}\r\n                        placeholder=\"Username\"\r\n                        onChange={this.handleChange}\r\n                        required\r\n                        autoFocus\r\n                    />\r\n                    <input\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        value={password}\r\n                        placeholder=\"Password\"\r\n                        onChange={this.handleChange}\r\n                        required\r\n                    /> */}\r\n                    <button>Login!</button>\r\n                </form>}\r\n\r\n                <div className=\"signup-section\">\r\n                    {isSignup && <form className=\"signup-form\" onSubmit={this.onSignup}>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"fullname\"\r\n                            value={fullname}\r\n                            placeholder=\"Fullname\"\r\n                            onChange={this.handleChange}\r\n                            required\r\n                        />\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"username\"\r\n                            value={username}\r\n                            placeholder=\"Username\"\r\n                            onChange={this.handleChange}\r\n                            required\r\n                        />\r\n                        <input\r\n                            type=\"password\"\r\n                            name=\"password\"\r\n                            value={password}\r\n                            placeholder=\"Password\"\r\n                            onChange={this.handleChange}\r\n                            required\r\n                        />\r\n                        <button >Signup!</button>\r\n                    </form>}\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link, NavLink } from 'react-router-dom'\r\n\r\nimport routes from '../routes'\r\n\r\n\r\nimport { onLogin, onLogout, onSignup, loadUsers, removeUser } from '../store/user.actions.js'\r\nimport { LoginSignup } from './login-signup.jsx'\r\n\r\nclass _AppHeader extends React.Component {\r\n    onLogin = (credentials) => {\r\n        this.props.onLogin(credentials)\r\n    }\r\n    onSignup = (credentials) => {\r\n        this.props.onSignup(credentials)\r\n    }\r\n    onLogout = () => {\r\n        this.props.onLogout()\r\n    }\r\n\r\n    render() {\r\n        const { user } = this.props\r\n        return (\r\n            <header className=\"app-header\">\r\n                <nav>\r\n                    {routes.map(route => <NavLink exact key={route.path} to={route.path}>{route.label}</NavLink>)}\r\n                    {user && <span className=\"user-info\">\r\n                            <Link to={`user/${user._id}`}>\r\n                                {user.fullname}\r\n                                <span className=\"score\">{user.score?.toLocaleString()}</span>\r\n                            </Link>\r\n                        <button onClick={this.onLogout}>Logout</button>\r\n                    </span>}\r\n                    {!user && <section className=\"user-info\">\r\n                        <LoginSignup onLogin={this.onLogin} onSignup={this.onSignup} />\r\n                    </section>}\r\n                </nav>\r\n                <h1>My App</h1>\r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        users: state.userModule.users,\r\n        user: state.userModule.user,\r\n        count: state.userModule.count,\r\n        isLoading: state.systemModule.isLoading\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    onLogin,\r\n    onSignup,\r\n    onLogout,\r\n    loadUsers,\r\n    removeUser\r\n}\r\n\r\n\r\n\r\nexport const AppHeader = connect(mapStateToProps, mapDispatchToProps)(_AppHeader)","import React from 'react'\r\n\r\nimport { eventBusService } from '../services/event-bus.service.js'\r\n\r\n\r\nexport class UserMsg extends React.Component {\r\n\r\n  removeEvent;\r\n\r\n  state = {\r\n    msg: null\r\n  }\r\n\r\n  componentDidMount() {\r\n    // Here we listen to the event that we emited, its important to remove the listener \r\n    this.removeEvent = eventBusService.on('show-user-msg', (msg) => {\r\n      this.setState({ msg })\r\n      setTimeout(()=>{\r\n        this.setState({ msg : null })\r\n      }, 2500)\r\n    })\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.removeEvent()\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.msg) return <span></span>\r\n    const msgClass = this.state.msg.type || ''\r\n    return (\r\n      <section className={'user-msg ' + msgClass}>\r\n        <button onClick={() => {\r\n          this.setState({ msg: null })\r\n        }}>x</button>\r\n        {this.state.msg.txt}\r\n      </section>\r\n    )\r\n  }\r\n}\r\n","\r\nimport React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { addToCart, removeFromCart, checkout } from '../store/car.actions'\r\nimport { UserMsg } from './user-msg.jsx'\r\n\r\nclass _AppFooter extends React.Component {\r\n\r\n    state = {\r\n        isCartShown: false,\r\n    }\r\n\r\n    componentDidMount() { }\r\n\r\n    removeFromCart = (carId) => {\r\n        this.props.removeFromCart(carId)\r\n    }\r\n    checkout = () => {\r\n        this.props.checkout();\r\n    }\r\n    get cartTotal() {\r\n        return this.props.cart.reduce((acc, car) => acc + car.price, 0)\r\n    }\r\n\r\n    render() {\r\n        const { isCartShown } = this.state\r\n        const { count, cart } = this.props;\r\n        return (\r\n            <footer className=\"app-footer\">\r\n                <p>\r\n                    coffeerights 2021 - count: {count}\r\n                </p>\r\n                {cart.length > 0 &&\r\n                    <h5>\r\n                        <span>{cart.length}</span> Products in your Cart\r\n                        <button className=\"btn-link\" onClick={(ev) => {\r\n                            ev.preventDefault();\r\n                            this.setState(prevState => ({ isCartShown: !prevState.isCartShown }))\r\n                        }}>\r\n                            ({(isCartShown) ? 'hide' : 'show'})\r\n                        </button>\r\n                    </h5>\r\n                }\r\n                {isCartShown && cart.length > 0 && <section className=\"cart\" >\r\n                    <h5>Your Cart</h5>\r\n                    <ul>\r\n                        {\r\n                            cart.map((car, idx) => <li key={idx}>\r\n                                <button onClick={() => {\r\n                                    this.removeFromCart(car._id)\r\n                                }}>x</button>\r\n                                {car.vendor}\r\n                            </li>)\r\n                        }\r\n                    </ul>\r\n                    <p>Total: ${this.cartTotal.toLocaleString()} </p>\r\n                    <button onClick={this.checkout}>Checkout</button>\r\n                </section>}\r\n                <UserMsg />\r\n            </footer>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        count: state.userModule.count,\r\n        cart: state.carModule.cart\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    checkout,\r\n    addToCart,\r\n    removeFromCart\r\n}\r\n\r\nexport const AppFooter = connect(mapStateToProps, mapDispatchToProps)(_AppFooter)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport {loadAndWatchUser} from '../store/user.actions'\r\n\r\nexport class _UserDetails extends Component {\r\n  \r\n  async componentDidMount() {\r\n    this.props.loadAndWatchUser(this.props.match.params.id)\r\n  }\r\n\r\n  render() {\r\n    const {user} = this.props\r\n    return (\r\n      <section className=\"user-details\">\r\n        <h1>User Details</h1>\r\n        {user && <div>\r\n          <h3>\r\n            {user.fullname}\r\n          </h3>\r\n          <pre>\r\n            {JSON.stringify(user, null, 2)}\r\n          </pre>\r\n        </div>}\r\n      </section>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.userModule.watchedUser\r\n  }\r\n}\r\nconst mapDispatchToProps = {\r\n  loadAndWatchUser\r\n}\r\n\r\nexport const UserDetails = connect(mapStateToProps, mapDispatchToProps)(_UserDetails)\r\n","import React from 'react'\r\n\r\n// const { Switch, Route } = ReactRouterDOM\r\nimport { Switch, Route } from 'react-router'\r\n\r\nimport routes from './routes'\r\n\r\nimport {AppHeader} from './cmps/app-header'\r\nimport {AppFooter} from './cmps/app-footer'\r\nimport {UserDetails} from './pages/user-details'\r\n\r\nexport class RootCmp extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <AppHeader />\r\n                <main>\r\n                    <Switch>\r\n                        {routes.map(route=> <Route key={route.path} exact component={route.component} path={route.path} /> )}\r\n                        <Route path=\"/user/:id\" component={UserDetails} />\r\n                    </Switch>\r\n                </main>\r\n                <AppFooter />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport { Provider } from 'react-redux'\n\nimport {store} from './store/store'\nimport {RootCmp} from './root-cmp';\nimport './assets/styles/main.scss';\n\n\n\nReactDOM.render(\n<React.StrictMode>\n    <Provider store={store}>\n      <Router>\n        <RootCmp />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}